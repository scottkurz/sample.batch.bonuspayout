<?xml version="1.0" encoding="UTF-8"?>
<persistence version="2.1" 
  xmlns="http://xmlns.jcp.org/xml/ns/persistence" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/persistence http://xmlns.jcp.org/xml/ns/persistence/persistence_2_1.xsd">

  <persistence-unit name="BonusPayoutPU">

    <jta-data-source>jdbc/batch</jta-data-source> <!-- java:comp/env/jdbc/batchDB, jdbc/BonusPayoutDS, ${db.url}  -->
    <non-jta-data-source>jdbc/batch</non-jta-data-source>

    <class>com.ibm.websphere.samples.batch.beans.AccountDataObject</class> 
    
    <properties>
      <!-- These properties are creating the database on the fly. We are using them to avoid users having
          to create a database to run the sample. 
          See also the create=true line in the datasource meta data. -->
      <property name="openjpa.jdbc.SynchronizeMappings" value="buildSchema(ForeignKeys=true)" />
      <property name="openjpa.jdbc.DBDictionary" value="derby" />

      <!-- EclipseLink specific properties to create the database. They are only used if using the jpa-2.1 feature. -->
      <property name="javax.persistence.schema-generation.database.action" value="drop-and-create" />
      <property name="javax.persistence.schema-generation.scripts.action" value="create" />
      <property name="javax.persistence.schema-generation.scripts.create-target" value="createTargetFile.ddl"/>

      <!--
      <property name="eclipselink.ddl-generation" value="drop-and-create-tables" />
      <property name="eclipselink.ddl-generation.output-mode" value="both" />
-->

    </properties>
  </persistence-unit>

</persistence>
